{"ast":null,"code":"import _objectWithoutProperties from \"/mnt/d/projects/react-auth0/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/d/projects/react-auth0/src/PrivateRoute.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction PrivateRoute(_ref) {\n  var Component = _ref.component,\n      auth = _ref.auth,\n      scopes = _ref.scopes,\n      role = _ref.role,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\", \"scopes\", \"role\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      //redirect to login if not login\n      if (!auth.isAuthenticated()) return auth.login(); // display message if user lack scope\n\n      if (scopes.length > 0 && auth.userHasScopes(scopes)) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"You need following scope(s) to view the page:(\\\" \\\")\", scopes.join(\",\"), \".\");\n      }\n\n      if (role.length > 0 && !auth.checkRole(role)) {\n        return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Access Denied. Your Role is insufficient!\"), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \" Page only available to admin. your role is \", role, \".\"));\n      } // render component\n\n\n      return React.createElement(Component, Object.assign({\n        auth: auth\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nPrivateRoute.prototype = {\n  Component: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  scopes: PropTypes.array,\n  role: PropTypes.string\n};\nPrivateRoute.defaultProps = {\n  scopes: [],\n  role: ''\n};\nexport default PrivateRoute;","map":{"version":3,"sources":["/mnt/d/projects/react-auth0/src/PrivateRoute.js"],"names":["React","Route","PropTypes","PrivateRoute","Component","component","auth","scopes","role","rest","props","isAuthenticated","login","length","userHasScopes","join","checkRole","prototype","func","isRequired","object","array","string","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,YAAT,OAAqE;AAAA,MAApCC,SAAoC,QAA9CC,SAA8C;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAANC,IAAM;;AAEjE,SACI,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EAAE,gBAAAC,KAAK,EAAE;AACX;AACA,UAAG,CAACJ,IAAI,CAACK,eAAL,EAAJ,EAA4B,OAAOL,IAAI,CAACM,KAAL,EAAP,CAFjB,CAGX;;AACA,UAAGL,MAAM,CAACM,MAAP,GAAc,CAAd,IAAmBP,IAAI,CAACQ,aAAL,CAAmBP,MAAnB,CAAtB,EAAiD;AAC/C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAEKA,MAAM,CAACQ,IAAP,CAAY,GAAZ,CAFL,MADJ;AAMD;;AACD,UAAGP,IAAI,CAACK,MAAL,GAAY,CAAZ,IAAiB,CAACP,IAAI,CAACU,SAAL,CAAeR,IAAf,CAArB,EAA0C;AACxC,eACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAAiDA,IAAjD,MAJA,CADJ;AAQD,OArBU,CAuBX;;;AACA,aAAO,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEF;AAAjB,SAA2BI,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KA3BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAgCH;;AAEDP,YAAY,CAACc,SAAb,GAAuB;AACnBb,EAAAA,SAAS,EAACF,SAAS,CAACgB,IAAV,CAAeC,UADN;AAEnBb,EAAAA,IAAI,EAACJ,SAAS,CAACkB,MAAV,CAAiBD,UAFH;AAGnBZ,EAAAA,MAAM,EAACL,SAAS,CAACmB,KAHE;AAInBb,EAAAA,IAAI,EAACN,SAAS,CAACoB;AAJI,CAAvB;AAOAnB,YAAY,CAACoB,YAAb,GAA0B;AACtBhB,EAAAA,MAAM,EAAC,EADe;AAEtBC,EAAAA,IAAI,EAAC;AAFiB,CAA1B;AAKA,eAAeL,YAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PrivateRoute({component:Component,auth,scopes,role,...rest}){\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props=>{\r\n                //redirect to login if not login\r\n                if(!auth.isAuthenticated()) return auth.login();\r\n                // display message if user lack scope\r\n                if(scopes.length>0 && auth.userHasScopes(scopes)){\r\n                  return(\r\n                      <h1>\r\n                          You need following scope(s) to view the page:(\" \")\r\n                          {scopes.join(\",\")}.\r\n                      </h1>\r\n                  );\r\n                }\r\n                if(role.length>0 && !auth.checkRole(role)){\r\n                  return(\r\n                      <>\r\n                      <h1>\r\n                          Access Denied. Your Role is insufficient!\r\n                      </h1>\r\n                      <h3> Page only available to admin. your role is {role}.</h3>\r\n                      </>\r\n                  );\r\n                }\r\n\r\n                // render component\r\n                return <Component auth={auth} {...props}/>\r\n            }}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nPrivateRoute.prototype={\r\n    Component:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    scopes:PropTypes.array,\r\n    role:PropTypes.string\r\n}\r\n\r\nPrivateRoute.defaultProps={\r\n    scopes:[],\r\n    role:''\r\n}\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}