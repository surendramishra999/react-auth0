{"ast":null,"code":"import _classCallCheck from \"/mnt/d/projects/react-auth0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/projects/react-auth0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth(history) {\n    var _this = this;\n\n    _classCallCheck(this, Auth);\n\n    this.login = function () {\n      _this.auth0.authorize();\n    };\n\n    this.handleAuthentication = function () {\n      _this.auth0.parseHash(function (err, authResult) {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          _this.setSession(authResult);\n\n          _this.history.push('/');\n        } else if (err) {\n          _this.history.push('/');\n\n          alert(\"Error :\".concat(err.error, \". Check console log for more details\"));\n          console.log(err);\n        }\n      });\n    };\n\n    this.setSession = function (authResult) {\n      //set expire time\n      var expireAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expire_at', expireAt);\n    };\n\n    this.logout = function () {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expire_at');\n      _this.userProfile = null;\n\n      _this.auth0.logout({\n        clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n        returnTo: \"http://localhost:3000/\"\n      });\n\n      _this.history.push('/');\n    };\n\n    this.getAccessToken = function () {\n      var accessToken = localStorage.getItem(\"access_token\");\n\n      if (!accessToken) {\n        throw new Error(\"No Access Token found\");\n      }\n\n      return accessToken;\n    };\n\n    this.getProfile = function (cb) {\n      if (_this.userProfile) return cb(_this.userProfile);\n\n      _this.auth0.client.userInfo(_this.getAccessToken(), function (error, userProfile) {\n        if (userProfile) _this.userProfile = userProfile;\n        cb(userProfile, error);\n      });\n    };\n\n    this.history = history;\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  _createClass(Auth, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var expireAt = JSON.parse(localStorage.getItem('expire_at'));\n      return new Date().getTime() < expireAt;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/mnt/d/projects/react-auth0/src/Auth/Auth.js"],"names":["auth0","Auth","history","login","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","push","alert","error","console","log","expireAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","userProfile","clientID","process","env","REACT_APP_AUTH0_CLIENT_ID","returnTo","getAccessToken","getItem","Error","getProfile","cb","client","userInfo","WebAuth","domain","REACT_APP_AUTH0_DOMAIN","redirectUri","REACT_APP_AUTH0_CALLBACK_URL","audience","REACT_APP_AUTH0_AUDIENCE","responseType","scope","parse"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js';\r\n\r\n\r\nexport default class Auth{\r\n  constructor(history){\r\n   this.history=history;\r\n   this.auth0=new auth0.WebAuth({\r\n       domain:process.env.REACT_APP_AUTH0_DOMAIN,\r\n       clientID:process.env.REACT_APP_AUTH0_CLIENT_ID,\r\n       redirectUri:process.env.REACT_APP_AUTH0_CALLBACK_URL,\r\n       audience:process.env.REACT_APP_AUTH0_AUDIENCE,\r\n       responseType:\"token id_token\",\r\n       scope:\"openid profile email\"\r\n   });\r\n  }\r\n\r\n  login =()=>{\r\n    this.auth0.authorize();\r\n  }\r\n\r\n  handleAuthentication=()=>{\r\n    this.auth0.parseHash((err,authResult)=>{\r\n      if(authResult && authResult.accessToken && authResult.idToken){\r\n         this.setSession(authResult);\r\n         this.history.push('/');\r\n      }else if(err){\r\n        this.history.push('/');\r\n        alert(`Error :${err.error}. Check console log for more details`);\r\n        console.log(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  setSession=authResult=>{\r\n    //set expire time\r\n    const expireAt=JSON.stringify(\r\n      authResult.expiresIn * 1000 + new Date().getTime()\r\n      );\r\n      localStorage.setItem('access_token',authResult.accessToken);\r\n      localStorage.setItem('id_token',authResult.idToken);\r\n      localStorage.setItem('expire_at',expireAt);\r\n  }\r\n\r\n  isAuthenticated(){\r\n    const expireAt=JSON.parse(localStorage.getItem('expire_at'));\r\n    return new Date().getTime()<expireAt;\r\n  }\r\n\r\n  logout=()=>{\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('id_token');\r\n    localStorage.removeItem('expire_at');\r\n    this.userProfile=null;\r\n    this.auth0.logout({\r\n      clientID:process.env.REACT_APP_AUTH0_CLIENT_ID,\r\n      returnTo:\"http://localhost:3000/\"\r\n    });\r\n    this.history.push('/');\r\n  }\r\n\r\n  getAccessToken=()=>{\r\n    const accessToken=localStorage.getItem(\"access_token\");\r\n    if(!accessToken){\r\n     throw new Error(\"No Access Token found\");\r\n    }\r\n    return accessToken;\r\n  }\r\n\r\n  getProfile=cb=>{\r\n   if(this.userProfile) return cb(this.userProfile);\r\n   this.auth0.client.userInfo(this.getAccessToken(),(error,userProfile)=>{\r\n     if(userProfile) this.userProfile=userProfile;\r\n     cb(userProfile,error);\r\n   });\r\n\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}